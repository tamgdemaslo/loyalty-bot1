"""
üìù –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ UX —Ç–µ–∫—Å—Ç—ã –¥–ª—è –±–æ—Ç–∞
–°–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ, –±–µ–∑ –∏–∑–±—ã—Ç–∫–∞ —ç–º–æ–¥–∑–∏
"""

from datetime import datetime
from typing import List, Dict

class WelcomeTexts:
    """–¢–µ–∫—Å—Ç—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è - —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ"""
    
    @staticmethod
    def new_user_greeting():
        return (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!\n\n"
            "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤\n"
            "‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n"
            "‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∏–∑–∏—Ç–æ–≤\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        )
    
    @staticmethod
    def returning_user(name: str, status: str, balance: int, time_greeting: str = ""):
        greeting = f"{time_greeting}, {name}!" if time_greeting else f"–ü—Ä–∏–≤–µ—Ç, {name}!"
        
        return (
            f"{greeting}\n\n"
            f"–í–∞—à —Å—Ç–∞—Ç—É—Å: {status}\n"
            f"–ë–∞–ª–∞–Ω—Å: {balance:,} ‚ÇΩ\n\n"
            "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?"
        )
    
    @staticmethod
    def new_client_name_request():
        return "–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    
    @staticmethod
    def profile_created():
        return (
            "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω.\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã –∑–∞ –ø–æ–∫—É–ø–∫–∏ "
            "–∏ —Ç—Ä–∞—Ç–∏—Ç—å –∏—Ö –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ."
        )

class BalanceTexts:
    """–¢–µ–∫—Å—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º"""
    
    @staticmethod
    def empty_balance(status: str):
        return (
            "–ë–∞–ª–∞–Ω—Å: 0 ‚ÇΩ\n\n"
            "–ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è.\n"
            "–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ ‚Äî –∏ –±–æ–Ω—É—Å—ã –Ω–µ –∑–∞—Å—Ç–∞–≤—è—Ç —Å–µ–±—è –∂–¥–∞—Ç—å!"
        )
    
    @staticmethod
    def small_balance(balance: int, status: str):
        return (
            f"–ë–∞–ª–∞–Ω—Å: {balance:,} ‚ÇΩ\n\n"
            f"–ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ —Ö–≤–∞—Ç–∏—Ç –Ω–∞ –º–µ–ª–∫–∏–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ –¥–æ–ø–ª–∞—Ç—É –∫ –¢–û.\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –±–æ–ª—å—à–µ–π —Å—É–º–º—ã."
        )
    
    @staticmethod
    def good_balance(balance: int, status: str, max_redeem: int):
        return (
            f"–ë–∞–ª–∞–Ω—Å: {balance:,} ‚ÇΩ\n\n"
            f"–û—Ç–ª–∏—á–Ω–∞—è —Å—É–º–º–∞! –ú–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–æ {max_redeem:,} ‚ÇΩ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –¢–û.\n"
            f"–í–∞—à —Å—Ç–∞—Ç—É—Å ¬´{status}¬ª –¥–∞—ë—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏."
        )

class BookingTexts:
    """–¢–µ–∫—Å—Ç—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏"""
    
    @staticmethod
    def booking_start():
        return "–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ..."
    
    @staticmethod
    def service_recommendations(services: List[str]):
        if not services:
            return "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞"
        
        message = "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–ª—è –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ:\n\n"
        for service in services:
            message += f"‚Ä¢ {service}\n"
        
        message += "\n–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é —É—Å–ª—É–≥—É –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞"
        return message
    
    @staticmethod
    def master_selection(master_name: str):
        return f"–ú–∞—Å—Ç–µ—Ä: {master_name}"
    
    @staticmethod
    def time_selection():
        return "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è"

class RedeemTexts:
    """–¢–µ–∫—Å—Ç—ã –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –±–æ–Ω—É—Å–æ–≤"""
    
    @staticmethod
    def no_balance():
        return (
            "–ë–æ–Ω—É—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.\n\n"
            "–û–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞."
        )
    
    @staticmethod
    def redeem_scenarios(balance: int, scenarios: List[Dict]):
        message = f"–î–æ—Å—Ç—É–ø–Ω–æ: {balance:,} ‚ÇΩ\n\n–í–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n"
        
        for scenario in scenarios:
            message += (
                f"{scenario['service']}\n"
                f"–≠–∫–æ–Ω–æ–º–∏—è: {scenario['savings']:,} ‚ÇΩ\n"
                f"–û—Å—Ç–∞—Ç–æ–∫: {scenario['remaining']:,} ‚ÇΩ\n\n"
            )
        
        return message

class AnalyticsTexts:
    """–¢–µ–∫—Å—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    
    @staticmethod
    def user_stats(status: str, balance: int, visits: int, progress: float):
        return (
            f"–°—Ç–∞—Ç—É—Å: {status}\n"
            f"–ë–∞–ª–∞–Ω—Å: {balance:,} ‚ÇΩ\n"
            f"–ü–æ—Å–µ—â–µ–Ω–∏–π: {visits}\n"
            f"–ü—Ä–æ–≥—Ä–µ—Å—Å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é: {progress:.0%}"
        )
    
    @staticmethod
    def visit_history_empty():
        return "–ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–µ—â–µ–Ω–∏–π –ø–æ–∫–∞ –ø—É—Å—Ç–∞"

class MaintenanceTexts:
    """–¢–µ–∫—Å—Ç—ã —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"""
    
    @staticmethod
    def maintenance_overview():
        return "–°—Ç–∞—Ç—É—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"
    
    @staticmethod
    def maintenance_reminder(service: str, km_left: int):
        if km_left > 0:
            return f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {service} —á–µ—Ä–µ–∑ {km_left} –∫–º"
        return f"–í—Ä–µ–º—è –¥–ª—è: {service}"

class SupportTexts:
    """–¢–µ–∫—Å—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    
    @staticmethod
    def support_menu(level: str):
        return (
            "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n\n"
            "–ú—ã –ø–æ–º–æ–∂–µ–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, "
            "–∑–∞–ø–∏—Å–∏ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏."
        )
    
    @staticmethod
    def how_it_works():
        return (
            "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏:\n\n"
            "‚Ä¢ –ó–∞ –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–æ–Ω—É—Å—ã\n"
            "‚Ä¢ –ë–æ–Ω—É—Å—ã –º–æ–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —É—Å–ª—É–≥–∏\n"
            "‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ —Ç—Ä–∞—Ç–∏—Ç–µ, —Ç–µ–º –≤—ã—à–µ —Å—Ç–∞—Ç—É—Å\n"
            "‚Ä¢ –í—ã—Å–æ–∫–∏–π —Å—Ç–∞—Ç—É—Å = –±–æ–ª—å—à–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π"
        )
    
    @staticmethod
    def contact_info():
        return (
            "–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX\n"
            "Email: support@example.com\n\n"
            "–†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00"
        )

class ErrorTexts:
    """–¢–µ–∫—Å—Ç—ã –æ—à–∏–±–æ–∫"""
    
    @staticmethod
    def auth_required():
        return (
            "–ù—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.\n\n"
            "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã."
        )
    
    @staticmethod
    def general_error():
        return (
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É."
        )

class GamificationTexts:
    """–£–ø—Ä–æ—â—ë–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    @staticmethod
    def new_achievement(title: str, reward: int):
        return (
            f"–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {title}\n"
            f"–ë–æ–Ω—É—Å: +{reward} ‚ÇΩ"
        )
    
    @staticmethod
    def level_up(old_level: str, new_level: str, benefits: List[str]):
        message = f"–°—Ç–∞—Ç—É—Å –ø–æ–≤—ã—à–µ–Ω: {old_level} ‚Üí {new_level}\n\n"
        if benefits:
            message += "–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
            for benefit in benefits:
                message += f"‚Ä¢ {benefit}\n"
        return message

class TextHelpers:
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤"""
    
    @staticmethod
    def get_time_greeting():
        hour = datetime.now().hour
        if 6 <= hour < 12:
            return "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
        elif 12 <= hour < 18:
            return "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
        elif 18 <= hour < 23:
            return "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
        else:
            return "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"
    
    @staticmethod
    def format_list(items: List[str]) -> str:
        return "\n".join(f"‚Ä¢ {item}" for item in items)
    
    @staticmethod
    def format_money(amount: int) -> str:
        return f"{amount:,} ‚ÇΩ"

class DynamicTexts:
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã"""
    
    @staticmethod
    def countdown_text(days: int, action: str) -> str:
        if days == 0:
            return f"{action} —Å–µ–≥–æ–¥–Ω—è"
        elif days == 1:
            return f"{action} –∑–∞–≤—Ç—Ä–∞"
        else:
            return f"{action} —á–µ—Ä–µ–∑ {days} –¥–Ω."
    
    @staticmethod
    def progress_text(current: int, target: int, unit: str = "") -> str:
        progress = (current / target) * 100 if target > 0 else 0
        return f"{current}/{target} {unit} ({progress:.0f}%)"

# –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤
__all__ = [
    'WelcomeTexts', 'BalanceTexts', 'BookingTexts', 'RedeemTexts',
    'AnalyticsTexts', 'MaintenanceTexts', 'SupportTexts', 'ErrorTexts',
    'GamificationTexts', 'TextHelpers', 'DynamicTexts'
]
