# loyalty-bot/bot/loyalty.py
"""
–°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞
"""

from typing import Dict, Any
from .formatting import fmt_money

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
LOYALTY_LEVELS = {
    1: {
        "name": "–ù–æ–≤–∏—á–æ–∫",
        "emoji": "üå±",
        "min_spent": 0,
        "bonus_rate": 0.05,  # 5%
        "redeem_cap": 0.30,  # 30%
        "description": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏!",
        "benefits": [
            "5% –±–æ–Ω—É—Å–æ–≤ —Å –ø–æ–∫—É–ø–æ–∫",
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∞—Ç—å –¥–æ 30% –æ—Ç —á–µ–∫–∞"
        ]
    },
    2: {
        "name": "–°–µ—Ä–µ–±—Ä–æ",
        "emoji": "ü•à",
        "min_spent": 1500000,  # 15000 —Ä—É–±–ª–µ–π
        "bonus_rate": 0.07,  # 7%
        "redeem_cap": 0.35,  # 35%
        "description": "–í—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º!",
        "benefits": [
            "7% –±–æ–Ω—É—Å–æ–≤ —Å –ø–æ–∫—É–ø–æ–∫",
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∞—Ç—å –¥–æ 35% –æ—Ç —á–µ–∫–∞",
            "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö"
        ]
    },
    3: {
        "name": "–ó–æ–ª–æ—Ç–æ",
        "emoji": "ü•á",
        "min_spent": 4000000,  # 40000 —Ä—É–±–ª–µ–π
        "bonus_rate": 0.10,  # 10%
        "redeem_cap": 0.40,  # 40%
        "description": "–ó–æ–ª–æ—Ç–æ–π —Å—Ç–∞—Ç—É—Å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!",
        "benefits": [
            "10% –±–æ–Ω—É—Å–æ–≤ —Å –ø–æ–∫—É–ø–æ–∫",
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∞—Ç—å –¥–æ 40% –æ—Ç —á–µ–∫–∞",
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–∏—Å",
            "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏"
        ]
    },
    4: {
        "name": "–ü–ª–∞—Ç–∏–Ω–∞",
        "emoji": "üíé",
        "min_spent": 10000000,  # 100000 —Ä—É–±–ª–µ–π
        "bonus_rate": 0.15,  # 15%
        "redeem_cap": 0.50,  # 50%
        "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å VIP-–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è!",
        "benefits": [
            "15% –±–æ–Ω—É—Å–æ–≤ —Å –ø–æ–∫—É–ø–æ–∫",
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∞—Ç—å –¥–æ 50% –æ—Ç —á–µ–∫–∞",
            "VIP-–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
            "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –Ω–∞ —É—Å–ª—É–≥–∏"
        ]
    }
}


def calculate_level_by_spent(total_spent: int) -> int:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –æ–±—â–µ–π —Å—É–º–º–µ —Ç—Ä–∞—Ç"""
    for level_id in sorted(LOYALTY_LEVELS.keys(), reverse=True):
        if total_spent >= LOYALTY_LEVELS[level_id]["min_spent"]:
            return level_id
    return 1


def get_level_info(level_id: int) -> Dict[str, Any]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Ä–æ–≤–Ω–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏"""
    return LOYALTY_LEVELS.get(level_id, LOYALTY_LEVELS[1])


def get_bonus_rate(level_id: int) -> float:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤ –¥–ª—è —É—Ä–æ–≤–Ω—è"""
    return get_level_info(level_id)["bonus_rate"]


def get_redeem_cap(level_id: int) -> float:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —É—Ä–æ–≤–Ω—è"""
    return get_level_info(level_id)["redeem_cap"]


def format_level_status(level_id: int, total_spent: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    level_info = get_level_info(level_id)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    next_level_id = level_id + 1
    if next_level_id in LOYALTY_LEVELS:
        next_level = LOYALTY_LEVELS[next_level_id]
        progress = total_spent - level_info["min_spent"]
        needed = next_level["min_spent"] - level_info["min_spent"]
        progress_percent = min(100, (progress / needed) * 100) if needed > 0 else 100
        
        status_text = (
            f"{level_info['emoji']} <b>{level_info['name']}</b>\n"
            f"üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: <b>{fmt_money(total_spent)}</b>\n"
            f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ {next_level['emoji']} {next_level['name']}: "
            f"<b>{progress_percent:.1f}%</b>\n"
            f"üéØ –î–æ –ø–æ–≤—ã—à–µ–Ω–∏—è: <b>{fmt_money(next_level['min_spent'] - total_spent)}</b>"
        )
    else:
        status_text = (
            f"{level_info['emoji']} <b>{level_info['name']}</b>\n"
            f"üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: <b>{fmt_money(total_spent)}</b>\n"
            f"üèÜ <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç!</b>"
        )
    
    return status_text


def format_level_benefits(level_id: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π —É—Ä–æ–≤–Ω—è"""
    level_info = get_level_info(level_id)
    
    benefits_text = f"<b>{level_info['emoji']} –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ —É—Ä–æ–≤–Ω—è {level_info['name']}:</b>\n\n"
    
    for i, benefit in enumerate(level_info["benefits"], 1):
        benefits_text += f"‚Ä¢ {benefit}\n"
    
    return benefits_text


def get_level_up_message(old_level: int, new_level: int) -> str:
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è"""
    new_level_info = get_level_info(new_level)
    
    message = (
        f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!</b>\n\n"
        f"–í–∞—à –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_level_info['emoji']} <b>{new_level_info['name']}</b>\n\n"
        f"{new_level_info['description']}\n\n"
        f"{format_level_benefits(new_level)}"
    )
    
    return message
